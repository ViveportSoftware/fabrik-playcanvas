import * as pc from 'playcanvas';
export declare class Renderer {
    protected app?: pc.Application;
    private camera?;
    protected xrCamera?: pc.Entity;
    protected xrCameraRoot?: pc.Entity;
    private hud?;
    protected textHMDPos?: pc.Entity;
    protected textHMDRotation?: pc.Entity;
    protected textInputSourceLeftPos?: pc.Entity;
    protected textTargetLeftPos?: pc.Entity;
    protected textInputSourceRightPos?: pc.Entity;
    protected textTargetRightPos?: pc.Entity;
    protected textAvatarForward?: pc.Entity;
    protected textTargetRootForward?: pc.Entity;
    private xrInputSources;
    private xrStartCallback;
    private updateCallbacks;
    protected rootEntity?: pc.Entity;
    isLocalDemo: boolean;
    private isRunning;
    constructor(app?: pc.Application | undefined, rootEntity?: pc.Entity | undefined, isLocalDemo?: boolean);
    init(): Promise<void>;
    stop(): void;
    resume(): void;
    private initApplication;
    private loadAssets;
    private loadFontAssets;
    private initCamera;
    private initXRCamera;
    private initHUD;
    private initTextHMDPos;
    private initTextHMDRotation;
    private initTextInputSourceLeftPos;
    private initTextTargetLeftPos;
    private initTextInputSourceRightPos;
    private initTextTargetRightPos;
    private initTextAvatarForward;
    private initLight;
    private initPlane;
    private drawBaseLines;
    private runApplication;
    addUpdateCallback(cb?: (dt: number) => void): void;
    addBone(length: number, color: pc.Color, prefix?: string): pc.Entity;
    addTarget(name?: string): pc.Entity;
    drawLine(v1: pc.Vec3, v2: pc.Vec3, c: pc.Color | undefined, depthTest?: boolean | undefined): void;
    getXRInputSources(): pc.XrInputSource[];
    addXRStartCallback(fn: (xrCamera: pc.Entity) => void): void;
    isInXR(): boolean;
    private xrInputAddCallback;
    private registerXRInputEvent;
    startXR(): void;
    getXRCameraPos(): pc.Vec3 | undefined;
    setTextInputSourceLeftPos(text: string): void;
    setTextTargetLeftPos(text: string): void;
    setTextInputSourceRightPos(text: string): void;
    setTextTargetRightPos(text: string): void;
    setXRCamera(xrCamera: pc.Entity): void;
}
